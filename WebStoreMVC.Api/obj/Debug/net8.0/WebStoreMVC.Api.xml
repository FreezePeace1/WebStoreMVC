<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebStoreMVC.Api</name>
    </assembly>
    <members>
        <member name="M:WebStoreMVC.Areas.Admin.Controllers.ProductsForAdminController.#ctor(WebStoreMVC.Services.Interfaces.IProductsService,WebStoreMVC.Services.Interfaces.ISearchingProductsService)">
            <summary>
            DI сервиса CRUD товаров
            </summary>
            <param name="productsService"></param>
        </member>
        <member name="M:WebStoreMVC.Areas.Admin.Controllers.ProductsForAdminController.GetAllProducts(System.Int32,System.String)">
            <summary>
            Получение всех товаров (
            </summary>
            <param name=""></param>
            <remarks>
                Request for getting all products
                GET
            </remarks>
        </member>
        <member name="M:WebStoreMVC.Areas.Admin.Controllers.ProductsForAdminController.GetProductById(System.Int32)">
            <summary>
            Получение товара по Id
            </summary>
            <param name=""></param>
            <remarks>
                Request for getting product by id
                GET
                {
                    "id": "26"
                }
            </remarks>
            <response code = "200">Получение товара прошло успешно</response>
            <response code = "500">Получение товара прошло неудачно</response>
        </member>
        <member name="M:WebStoreMVC.Areas.Admin.Controllers.ProductsForAdminController.PostProduct(WebStoreMVC.Domain.Entities.Product)">
            <summary>
            Создание товара
            </summary>
            <param name=""></param>
            <remarks>
                Request for editing product
                POST
            </remarks>
        </member>
        <member name="M:WebStoreMVC.Areas.Admin.Controllers.ProductsForAdminController.EditProduct(WebStoreMVC.Domain.Entities.Product)">
            <summary>
            Изменение товара
            </summary>
            <param name=""></param>
            <remarks>
                Request for getting product by id
                POST
            </remarks>
            <response code = "404">Товар не был найден</response> 
        </member>
        <member name="M:WebStoreMVC.Areas.Admin.Controllers.ProductsForAdminController.DeleteProduct(System.Nullable{System.Int32})">
            <summary>
            Удаление товара
            </summary>
            <param name=""></param>
            <remarks>
                Request for deleting product
                POST
            </remarks>
            <response code = "404">Товар не был найден</response> 
        </member>
        <member name="M:WebStoreMVC.Areas.Admin.Controllers.ProductsForAdminController.GetProductByPage(System.Int32,System.Int32)">
            <summary>
            Пагинация
            </summary>
            <param name=""></param>
            <remarks>
                Request for getting product by page
                GET
            </remarks>
            <response code = "200">Пагинация прошла успешно</response> 
        </member>
        <member name="T:WebStoreMVC.Controllers.AccountController">
            <summary>
            Контроллер предназначенный для аутентификации и авторизации пользователей
            </summary>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.#ctor(WebStoreMVC.Services.Interfaces.IAuthService)">
            <summary>
            DI сервиса AuthService
            </summary>
            <param name="authService"></param>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.SeedingRoles">
            <summary>
            Создание ролей
            </summary>
            <remarks>
                Request for creating roles
                POST
            </remarks>
            <response code = "200">Создание ролей прошло успешно</response>
            <response code = "400">Создание ролей прошло неудачно</response>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.Registration">
            <summary>
            View для регистрации
            </summary>
            <returns>Возвращает view с RegisterDto</returns>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.Registration(WebStoreMVC.Dtos.RegisterDto)">
            <summary>
            Регистрация пользователя
            </summary>
            <param name="registerDto"></param>
            <remarks>
                Request for user registration
                POST
                {
                    "username": "string",
                    "password": "string",
                    "confirmedPassword": "string",
                    "email": "string"
                }
            </remarks>
            <response code = "200">Регистрация пользователя прошла успешно</response>
            <response code = "400">Регистрация пользователя прошла неудачно</response>
            <returns>При удачной отработке сервиса (записываем данные пользователя в БД и отправляем токен варификации на почту)
            переходим на начальную страницу, иначе будет возвращаться view до тех пор,
            пока пользователь не введет правильно данные для регистрации</returns>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.Login">
            <summary>
            View для логина
            </summary>
            <returns>Возвращает view с LoginDto</returns>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.Login(WebStoreMVC.Dtos.LoginDto)">
            <summary>
            Авторизация пользователя
            </summary>
            <param name="loginDto"></param>
            <remarks>
                Request for user authorization
                POST
                {
                    "username": "string",
                    "password": "string"
                }
            </remarks>
            <response code = "200">Авторизация пользователя прошла успешно</response>
            <response code = "400">Авторизация пользователя прошла неудачно</response>
            <returns>При удачной отработке сервиса и получения токена переходим на начальную страницу,
            если сервис отработал правильно, но пользователь не подтверждал варификацию, то переходим на страницу верификации,
            при этом отправляем повторное сообщение с токеном валидации на почту пользователя, иначе будет возвращаться view
            если пользователь неправильно вводит данные для аккаунта</returns>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.FromUserToAdmin(WebStoreMVC.Dtos.UpdateDto)">
            <summary>
            Перевод роли с обычного пользователя (User) к роли администратора (Admin)
            </summary>
            <param name="updateRoleDto"></param>
            <remarks>
                Request for transferring User to Admin 
                POST
                {
                    "username": "string"
                }
            </remarks>
            <response code = "200">Перевод пользователя к админу прошел успешно</response>
            <response code = "400">Перевод пользователя к админу прошел неудачно</response>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.Logout">
            <summary>
            Выход пользователя из аккаунта
            </summary>
            <remarks>
                Request for log out User 
                POST
            </remarks>
            <response code = "200">Выход пользователя прошел успешно</response>
            <response code = "400">Выход пользователя прошел неудачно</response>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.FromAdminToUser(WebStoreMVC.Dtos.UpdateDto)">
            <summary>
            Перевод роли с администратора (Admin) к роли пользователя (User)
            </summary>
            <remarks>
                Request for transferring Admin to User  
                POST
                {
                    "username": "string"
                }
            </remarks>
            <response code = "200">Перевод админа к пользователю прошел успешно</response>
            <response code = "400">Перевод админа к пользователю прошел неудачно</response>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.AccessDenied">
            <summary>
            Если пользователю отказали в доступе
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.VerifyAccount(WebStoreMVC.Dtos.VerifyAccountDto)">
            <summary>
            Варификация через токен, который отправляется на почту пользователя
            </summary>
            <param name="verifyAccountDto"></param>
            <returns>При удачной отработке сервиса возвращает на начало страницы, иначе возвращает view ввода токена пока пользователь не введет правильный токен</returns>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.ForgotPassword(WebStoreMVC.Dtos.ForgotPasswordDto)">
            <summary>
            Ввод почты пользователя и отправка токена на сброс пароля
            </summary>
            <param name="forgotPasswordDto"></param>
            <returns>При удачной отработке сервиса переходит на страницу сброса пароля, иначе пока пользователь не введет существующую почту</returns>
        </member>
        <member name="M:WebStoreMVC.Controllers.AccountController.ResetPassword(WebStoreMVC.Dtos.ResetPasswordDto)">
            <summary>
            Сброс пароля засчет ввода токена для восстановления пароля, который отправляется на почту пользователя, самого нового пароля и его повторения
            </summary>
            <param name="resetPasswordDto"></param>
            <returns>При удачной отработке сервиса возвращает на начальную страницу, иначе пока не будут соблюдены условия: правильности токена и пароля</returns>
        </member>
        <member name="M:WebStoreMVC.Startup.AddIdentity(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Подключение и настройка Identity
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WebStoreMVC.Startup.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Добавление swagger
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WebStoreMVC.Startup.AddAuthenticationAndAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Добавление аутентификации и авторизации с помощью JWT
            </summary>
            <param name="services"></param>
            <param name="builder"></param>
        </member>
    </members>
</doc>
